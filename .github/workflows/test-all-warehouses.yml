name: Test all warehouse platforms
on:
  schedule:
    - cron: "0 */8 * * *"
  pull_request:
    branches: ["master"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      dbt-version:
        type: string
        required: false
        description: dbt's version to test with
      elementary-ref:
        type: string
        required: false
        description: Branch or tag to checkout for 'elementary' repository
      dbt-data-reliability-ref:
        type: string
        required: false
        description: Branch or tag to checkout for 'dbt-data-reliability' repository
      include-dbt-pre-releases:
        description: "If set, the workflow will support installing dbt pre-releases"
        type: choice
        required: true
        default: "false"
        options:
          - true
          - false

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        dbt-version: ${{ inputs.dbt-version && fromJSON(format('["{0}"]', inputs.dbt-version)) || fromJSON('["1.3.0", null]') }}
        warehouse-type:
          [
            postgres,
            snowflake,
            bigquery,
            redshift,
            databricks,
            databricks_catalog,
            spark,
          ]
    uses: ./.github/workflows/test-warehouse.yml
    with:
      warehouse-type: ${{ matrix.warehouse-type }}
      dbt-version: ${{ matrix.dbt-version }}
      elementary-ref: ${{ inputs.elementary-ref }}
      dbt-data-reliability-ref: ${{ inputs.dbt-data-reliability-ref }}
      include-dbt-pre-releases: ${{ inputs.include-dbt-pre-releases }}
    secrets: inherit

  notify_failures:
    name: Notify Slack
    secrets: inherit
    needs: [test]
    if: |
      always() &&
      ! cancelled() &&
      ! contains(needs.test.result, 'success') &&
      ! contains(needs.test.result, 'cancelled') &&
      ${{ github.event_name == 'schedule' }}
    uses: elementary-data/elementary/.github/workflows/notify_slack.yml@master
    with:
      result: "failure"
      run_id: ${{ github.run_id }}
      workflow_name: ${{ workflow.name }}
