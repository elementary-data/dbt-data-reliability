version: 2

models:
  - name: any_type_column_anomalies
    meta:
      owner: [ '@edr', 'ele@data.com', 'another@mail.com' ]
      subscribers: "@egk"
    description: >
      This is a very weird description
      with breaklines
      and comma,
      and even a string like this 'wow'. You know, these $##$34#@#!^ can also be helpful
      WDYT?
    config:
      elementary:
        timestamp_column: updated_at
    tests:
      - elementary.volume_anomalies:
          time_bucket:
            period: hour
            count: 4
          meta:
            description: >
              This is a very weird description
              with breaklines
              and comma,
              and even a string like this 'wow'. You know, these $##$34#@#!^ can also be helpful
              WDYT?
          config:
            severity: warn
          tags: [ "table_anomalies" ]
      - elementary.all_columns_anomalies:
          tags: [ "all_any_type_columns_anomalies" ]
          #This here is to simulate a long test name as test params are part of the test name
          exclude_regexp: ".*column1|column2|column3|column4|column5|column6|column7|column8|column9|column10|column11|column12|column13|column14|column15|column16|column17.*"
      - generic_test_on_model:
          tags: [ "regular_tests" ]

  - name: no_timestamp_anomalies
    meta:
      owner: "ele@data.com, another@mail.com"
      subscribers: [ "@elon@gmail.com", "elon@gmail.com" ]
      description: This is a description.
    description: We use this model to test anomalies when there is no timestamp column
    tests:
      - elementary.volume_anomalies:
          tags: [ "no_timestamp" ]
    columns:
      - name: "null_count_str"
        tests:
          - elementary.column_anomalies:
              tags: [ "no_timestamp" ]
              column_anomalies:
                - null_count

  - name: dimension_anomalies
    meta:
      owner: "@egk.com"
      subscribers: [ "elon@egk" ]
    description: We use this model to test dimension anomalies
    config:
      elementary:
        timestamp_column: updated_at
    tests:
      - elementary.dimension_anomalies:
          tags: [ "dimension_anomalies" ]
          dimensions:
            - platform
      - elementary.dimension_anomalies:
          tags: [ "dimension_anomalies" ]
          dimensions:
            - platform
          where_expression: "platform = 'android'"
      - elementary.dimension_anomalies:
          tags: [ "dimension_anomalies" ]
          dimensions:
            - platform
            - version

  - name: error_model
    description: We use this model to create error runs and tests
    config:
      tags: [ "error_model" ]
    columns:
      - name: "missing_column"
        tests:
          - uniques:
              tags: [ "error_test", "regular_tests" ]

  - name: string_column_anomalies
    meta:
      owner: "@or"
      tags: [ "marketing" ]
    config:
      elementary:
        timestamp_column: updated_at
    tests:
      - elementary.freshness_anomalies:
          tags: [ "table_anomalies" ]
      - elementary.all_columns_anomalies:
          tags: [ "all_string_column_anomalies" ]
      - elementary.schema_changes:
          tags: [ "schema_changes" ]
    columns:
      - name: "min_length"
        tests:
          - relationships:
              tags: [ "regular_tests" ]
              to: source('training', 'string_column_anomalies_training')
              field: max_length
          - elementary.column_anomalies:
              tags: [ "string_column_anomalies" ]
              column_anomalies:
                - min_length
                - max_length
                - missing_count
      - name: max_length
        tests:
          - elementary.column_anomalies:
              tags: [ "string_column_anomalies" ]
      - name: average_length
        tests:
          - elementary.column_anomalies:
              tags: [ "string_column_anomalies" ]
              column_anomalies:
                - average_length
                - null_count
      - name: missing_count
        tests:
          - elementary.column_anomalies:
              tags: [ "string_column_anomalies" ]
      - name: missing_percent
        tests:
          - elementary.column_anomalies:
              tags: [ "string_column_anomalies" ]
      - name: updated_at
        tests:
          - elementary.column_anomalies:
              tags: [ "string_column_anomalies" ]

  - name: numeric_column_anomalies
    config:
      elementary:
        timestamp_column: updated_at
    tests:
      - elementary.volume_anomalies:
          tags: [ "table_anomalies" ]
      - elementary.freshness_anomalies:
          tags: [ "table_anomalies" ]
      - elementary.schema_changes:
          tags: [ "schema_changes" ]
      - elementary.all_columns_anomalies:
          tags: [ "all_numeric_columns_anomalies" ]
          column_anomalies:
            - average_length
            - null_count
    columns:
      - name: min
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - min
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - max
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - average
      - name: max
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - min
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - max
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - average
      - name: average
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - min
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - max
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
              column_anomalies:
                - average
      - name: zero_count
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
      - name: zero_percent
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
      - name: updated_at
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
      - name: variance
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]
      - name: standard_deviation
        tests:
          - elementary.column_anomalies:
              tags: [ "numeric_column_anomalies" ]

  - name: groups
    columns:
      - name: group_a
        data_type: "{{ 'STRING' if target.type == 'bigquery' else 'character varying' if target.type == 'redshift' else 'TEXT' }}"
      - name: group_b
        data_type: DOUBLE
      - name: group_c
    tests:
      - elementary.schema_changes:
          tags: [ "schema_changes" ]
      - elementary.schema_changes_from_baseline:
          fail_on_added: true
          tags: [ "schema_changes_from_baseline" ]
      - elementary.schema_changes_from_baseline:
          tags: [ "schema_changes_from_baseline" ]
          enforce_types: true

  - name: stats_players
    columns:
      - name: player
        data_type: "{{ 'STRING' if target.type == 'bigquery' else 'character varying' if target.type == 'redshift' else 'TEXT' }}"
      - name: goals
        data_type: BOOLEAN
      - name: coffee_cups_consumed
        data_type: INTEGER
    tests:
      - elementary.schema_changes:
          tags: [ "schema_changes" ]
      - elementary.schema_changes_from_baseline:
          tags: [ "schema_changes_from_baseline" ]
      - elementary.schema_changes_from_baseline:
          tags: [ "schema_changes_from_baseline" ]
          enforce_types: true

  - name: stats_team
    tests:
      - elementary.schema_changes:
          tags: [ "schema_changes" ]

sources:
  - name: training
    schema: test_seeds
    tables:
      - name: any_type_column_anomalies_training
        freshness:
          error_after:
            count: 1
            period: minute
        loaded_at_field: updated_at
        tests:
          - elementary.volume_anomalies:
              tags: [ "table_anomalies" ]
          - elementary.freshness_anomalies:
              tags: [ "table_anomalies" ]

      - name: string_column_anomalies_training
        freshness:
          error_after:
            count: 1
            period: minute
        loaded_at_field: no_such_column
        meta:
          elementary:
            timestamp_column: updated_at
        tests:
          - elementary.volume_anomalies:
              tags: [ "table_anomalies" ]
          - elementary.freshness_anomalies:
              tags: [ "table_anomalies" ]
      - name: numeric_column_anomalies_training
  - name: validation
    schema: test_seeds
    tables:
      - name: any_type_column_anomalies_validation
        freshness:
          warn_after:
            count: 1
            period: minute
        loaded_at_field: updated_at
        tests:
          - elementary.all_columns_anomalies:
              tags: [ "elementary_source" ]
        columns:
          - name: null_count_int
            tests:
              - generic_test_on_column:
                  tags: [ "regular_tests" ]

exposures:
  - name: elementary_exposure
    type: application
    maturity: medium
    url: https://elementary.not.really
    description: >
      Keep calm, Elementary tests exposures.

    depends_on:
      - ref('error_model')
      - source('training', 'any_type_column_anomalies_training')

    owner:
      name: Complete Nonsense
      email: fake@fakerson.com

  - name: weekly_jaffle_metrics
    type: dashboard
    maturity: high
    url: https://bi.tool/dashboards/1
    description: >
      Did someone say "exponential growth"?

    depends_on:
      - ref('string_column_anomalies')
      - ref('numeric_column_anomalies')

    owner:
      name: Claire from Data
      email: data@jaffleshop.com
